# interpreter for shell commands
set shell sh

# set '-eu' options for shell commands
# These options are used to have safer shell commands. Option '-e' is used to
# exit on error and option '-u' is used to give error for unset variables.
# Option '-f' disables pathname expansion which can be useful when $f, $fs, and
# $fx variables contain names with '*' or '?' characters. However, this option
# is used selectively within individual commands as it can be limiting at
# times.
set shellopts '-eu'

# set internal field separator (IFS) to "\n" for shell commands
# This is useful to automatically split file names in $fs and $fx properly
# since default file separator used in these variables (i.e. 'filesep' option)
# is newline. You need to consider the values of these options and create your
# commands accordingly.
set ifs "\n"

# use enter for shell commands
map <enter> shell

# define a custom 'delete' command
cmd delete ${{
    set -f
    printf "$fx\n"
    printf "delete? [y/n]: "
    read ans
    [ $ans = "y" ] && rm -rf $fx
}}

map D delete

# extract the current file with the right command
cmd extract ${{
    set -f
    case $f in
        *.tar.bz|*.tar.bz2|*.tbz|*.tbz2) tar xjvf $f;;
        *.tar.gz|*.tgz) tar xzvf $f;;
        *.tar.xz|*.txz) tar xJvf $f;;
        *.zip) unzip $f;;
        *.rar) unrar x $f;;
        *.7z) 7z x $f;;
    esac
}}

cmd zip ${{
    set -f
    printf "$fx\n"
    printf "zip name: "
    read ans
    mkdir $ans
    cp -r $fx $ans
    zip -r $ans.zip $ans
    rm -rf $ans
}}

map xe extract
map xz zip

# container mount
cmd cmount ${{
    set -f
    filename=$(basename $f)
    sudo cryptsetup -v luksOpen $f $filename
    sudo mkdir -p /mnt/$filename
    sudo mount /dev/mapper/$filename /mnt/$filename
    sudo chown $(whoami) /mnt/$filename
}}

# container umount
cmd cumount ${{
    filename=$(basename $f)
    sudo umount /mnt/$filename
    sudo cryptsetup -v luksClose $filename
}}

map xm cmount
map xu cumount
